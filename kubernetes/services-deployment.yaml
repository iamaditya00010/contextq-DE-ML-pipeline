apiVersion: apps/v1
kind: Deployment
metadata:
  name: pipeline-api
  labels:
    app: pipeline-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pipeline-api
  template:
    metadata:
      labels:
        app: pipeline-api
    spec:
      containers:
      - name: pipeline-api
        image: delogprocessingacr.azurecr.io/de-log-processing-api:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABRICKS_URL
          value: "https://de-log-processing-databricks.azuredatabricks.net"
        - name: MLFLOW_URL
          value: "http://mlflow-service:5000"
        - name: STORAGE_ACCOUNT_NAME
          value: "delogprocessingdatalake"
        - name: STORAGE_CONTAINER_NAME
          value: "bronze"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: pipeline-api-service
  labels:
    app: pipeline-api
spec:
  selector:
    app: pipeline-api
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pipeline-config
data:
  DATABRICKS_URL: "https://de-log-processing-databricks.azuredatabricks.net"
  MLFLOW_URL: "http://mlflow-service:5000"
  STORAGE_ACCOUNT_NAME: "delogprocessingdatalake"
  STORAGE_CONTAINER_NAME: "bronze"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring-service
  labels:
    app: monitoring-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitoring-service
  template:
    metadata:
      labels:
        app: monitoring-service
    spec:
      containers:
      - name: monitoring-service
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
  name: monitoring-service
  labels:
    app: monitoring-service
spec:
  selector:
    app: monitoring-service
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
    - job_name: 'pipeline-api'
      static_configs:
      - targets: ['pipeline-api-service:80']
    - job_name: 'mlflow-server'
      static_configs:
      - targets: ['mlflow-service:5000']
